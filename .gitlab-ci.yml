before_script:
    # Install ssh-agent if not already installed, it is required by Docker. # (change apt-get to yum if you use a CentOS-based image)

    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)

    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - ssh-add <(echo "$SSH_PRIVATE_KEY")

    # For Docker builds disable host key checking. Be aware that by adding that
    # you are suspectible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

    - apt-get update && apt-get install -y -qq build-essential git libjpeg-dev libldap2-dev libpng-dev libpq-dev libsasl2-dev libssl-dev libtiff5-dev libtiffxx5 python3 python3-dev python3-venv python3-distlib python3-pip

    # install recent nodejs
    - curl -sL https://deb.nodesource.com/setup_8.x | bash - && apt-get install -yqq nodejs

    # Dependencies to make "headless" selenium work:
    - apt-get install -y chromedriver

    # Try to activate the virtualenv if it already exists
    - mkdir -p uploads
    - python3 -m venv env
    - . env/bin/activate
    - pip install -r requirements.txt
    - yarn install
    - yarn run build_production

    # install geckodriver for selenium tests
    - wget https://github.com/mozilla/geckodriver/releases/download/v0.15.0/geckodriver-v0.15.0-linux64.tar.gz -O geckodriver.tar.gz
    - tar xvzf geckodriver.tar.gz
    - mv geckodriver env/bin/
    - chmod +x env/bin/geckodriver

test:
    stage: test
    script:
      - . env/bin/activate
      - (cd src && python3 ./manage.py test --settings=xr_web.settings.test_ci)
      # - yarn run test if you have js tests
      - node_modules/.bin/eslint src
      - bash -c "! python3 src/manage.py makemigrations --dry-run --exit --settings=xr_web.settings.dev"
      - flake8 src
