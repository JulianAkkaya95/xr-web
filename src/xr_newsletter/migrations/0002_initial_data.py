# Generated by Django 2.1.7 on 2019-03-27 14:42

from django.db import migrations
from django.db.models import Max


def initial_newsletter_page(apps, schema_editor):
    Group = apps.get_model("auth.Group")
    ContentType = apps.get_model("contenttypes.ContentType")
    Page = apps.get_model("wagtailcore.Page")
    GroupPagePermission = apps.get_model("wagtailcore.GroupPagePermission")
    HomePage = apps.get_model("xr_pages", "HomePage")
    LocalGroup = apps.get_model("xr_pages", "LocalGroup")
    NewsletterFormField = apps.get_model("xr_newsletter", "NewsletterFormField")
    NewsletterFormPage = apps.get_model("xr_newsletter", "NewsletterFormPage")

    # Create content types
    newsletter_page_content_type, created = ContentType.objects.get_or_create(
        model="newsletterformpage", app_label="xr_newsletter"
    )

    # get homepage
    homepage = HomePage.objects.get(path="00010001")

    # get reginal group
    regional_group = LocalGroup.objects.get(is_regional_group=True)

    # get homepage last child path
    child_qs = Page.objects.filter(path__startswith="00010001").filter(
        path__regex=r"^\d{12}$"
    )
    last_child_path = child_qs.aggregate(Max("path"))["path__max"]

    # Create EventListPage
    newsletter_page_path = ("%12d" % (int(last_child_path) + 1)).replace(" ", "0")
    newsletter_page, created = NewsletterFormPage.objects.get_or_create(
        title="Newsletter",
        slug="newsletter",
        content_type=newsletter_page_content_type,
        path=newsletter_page_path,
        depth=3,
        numchild=1,
        url_path="/home/newsletter/",
        group=regional_group,
    )
    newsletter_page.save()

    # adjust homepage number of child pages
    homepage.numchild += 1
    homepage.save()

    # add base form fields
    form_fields = (
        NewsletterFormField(
            page=newsletter_page,
            label="Email",
            name="email",
            field_type="email",
            required=True,
        ),
        NewsletterFormField(
            page=newsletter_page,
            label="Name",
            name="name",
            field_type="singleline",
            required=False,
        ),
        NewsletterFormField(
            page=newsletter_page,
            label="I agree",
            name="gdpr",
            field_type="checkbox",
            required=True,
            help_text=(
                "GDPR Permission: I give my consent to Extinction Rebellion to get "
                "in touch with me using the information I have provided in this "
                "form, for the purpose of news, updates, and rebellion"
            ),
        ),
    )
    for form_field in form_fields:
        form_field.save()
    # newsletter_page.form_fields.set(form_fields)

    # new groups for regional group
    moderators_group = Group.objects.get(name="Deutschland Page Moderators")
    editors_group = Group.objects.get(name="Deutschland Page Editors")

    # Group page permissions
    GroupPagePermission.objects.get_or_create(
        group=moderators_group, page=newsletter_page, permission_type="add"
    )
    GroupPagePermission.objects.get_or_create(
        group=moderators_group, page=newsletter_page, permission_type="edit"
    )
    GroupPagePermission.objects.get_or_create(
        group=moderators_group, page=newsletter_page, permission_type="publish"
    )

    GroupPagePermission.objects.get_or_create(
        group=editors_group, page=newsletter_page, permission_type="add"
    )
    GroupPagePermission.objects.get_or_create(
        group=editors_group, page=newsletter_page, permission_type="edit"
    )


class Migration(migrations.Migration):

    dependencies = [("xr_newsletter", "0001_initial")]

    operations = [
        migrations.RunPython(initial_newsletter_page, migrations.RunPython.noop)
    ]
