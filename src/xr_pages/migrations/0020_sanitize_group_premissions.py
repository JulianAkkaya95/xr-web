# Generated by Django 2.1.7 on 2019-03-22 19:57

from django.db import migrations


def sanitize_group_permissions(apps, schema_editor):
    Group = apps.get_model("auth.Group")
    Permission = apps.get_model("auth.Permission")
    ContentType = apps.get_model("contenttypes.ContentType")
    GroupCollectionPermission = apps.get_model("wagtailcore.GroupCollectionPermission")
    Collection = apps.get_model("wagtailcore.Collection")

    admin_content_type = ContentType.objects.get(
        model="admin", app_label="wagtailadmin"
    )
    access_wagtailadmin_permission = Permission.objects.get(
        content_type=admin_content_type, codename="access_admin"
    )
    image_content_type = ContentType.objects.get(
        model="image", app_label="wagtailimages"
    )
    delete_image_permission = Permission.objects.get(
        content_type=image_content_type, codename="delete_image"
    )
    change_image_permission = Permission.objects.get(
        content_type=image_content_type, codename="change_image"
    )

    document_content_type = ContentType.objects.get(
        model="document", app_label="wagtaildocs"
    )
    delete_document_permission = Permission.objects.get(
        content_type=document_content_type, codename="delete_document"
    )
    change_document_permission = Permission.objects.get(
        content_type=document_content_type, codename="change_document"
    )
    collection = Collection.objects.get(name="Common")

    groups = Group.objects.all()

    for group in groups:
        # give access to wagtail admin
        if access_wagtailadmin_permission not in group.permissions.all():
            group.permissions.add(access_wagtailadmin_permission)

        # clear delete permissions, since wagtail doesn't use them
        GroupCollectionPermission.objects.filter(
            group=group, collection=collection, permission=delete_image_permission
        ).delete()
        GroupCollectionPermission.objects.filter(
            group=group, collection=collection, permission=delete_document_permission
        ).delete()

        # add change permissions to editors, like wagtails default
        GroupCollectionPermission.objects.get_or_create(
            group=group, collection=collection, permission=change_image_permission
        )
        GroupCollectionPermission.objects.get_or_create(
            group=group, collection=collection, permission=change_document_permission
        )


class Migration(migrations.Migration):

    dependencies = [("xr_pages", "0019_change_home_page_title")]

    operations = [
        migrations.RunPython(sanitize_group_permissions, migrations.RunPython.noop)
    ]
