# Generated by Django 2.1.7 on 2019-03-23 01:00

from django.db import migrations
from django.db.models import Max


def add_special_regional_group_page(apps, schema_editor):
    Group = apps.get_model("auth.Group")
    ContentType = apps.get_model("contenttypes.ContentType")
    Page = apps.get_model("wagtailcore.Page")
    GroupPagePermission = apps.get_model("wagtailcore.GroupPagePermission")
    LocalGroupPage = apps.get_model("xr_pages.LocalGroupPage")
    LocalGroupListPage = apps.get_model("xr_pages.LocalGroupListPage")

    # Create HomeSubPage content type
    local_group_page_content_type, created = ContentType.objects.get_or_create(
        model="localgrouppage", app_label="xr_pages"
    )

    # get local_group_list_page
    local_group_list_page = LocalGroupListPage.objects.get()

    # get local_group_list_page last child path
    last_child_qs = Page.objects.filter(
        path__startswith=local_group_list_page.path
    ).filter(path__regex=r"^\d{16}$")
    if last_child_qs.exists():
        last_child_path = last_child_qs.aggregate(Max("path"))["path__max"]
    else:
        last_child_path = "%s0001" % local_group_list_page.path

    # Create HomeSubPage
    regional_group_page_path = ("%16d" % (int(last_child_path) + 1)).replace(" ", "0")
    regional_group_page = LocalGroupPage.objects.create(
        title="Deutschland",
        name="Deutschland",
        slug="de",
        content_type=local_group_page_content_type,
        path=regional_group_page_path,
        depth=4,
        numchild=0,
        url_path="/home/og/de/",
        is_regional_group=True,
    )

    # adjust homepage number of child pages
    local_group_list_page.numchild += 1
    local_group_list_page.save()

    # add GroupPagePermissions
    regional_moderators_group = Group.objects.get(
        name="%s Page Moderators" % regional_group_page.name
    )

    # Moderators
    for permission_type in ["edit"]:
        group_page_permission, created = GroupPagePermission.objects.get_or_create(
            group=regional_moderators_group,
            page=regional_group_page,
            permission_type=permission_type,
        )


class Migration(migrations.Migration):

    dependencies = [("xr_pages", "0021_localgrouppage_is_regional_group")]

    operations = [
        migrations.RunPython(add_special_regional_group_page, migrations.RunPython.noop)
    ]
